---------------------------------------------------------------------------------------
-- Title          : Wishbone slave core for Timestamp FIFO
---------------------------------------------------------------------------------------
-- File           : timestamp_fifo_wbgen2_pkg.vhd
-- Author         : auto-generated by wbgen2 from timestamp_fifo_wb.wb
-- Created        : Tue Apr 14 16:47:08 2015
-- Standard       : VHDL'87
---------------------------------------------------------------------------------------
-- THIS FILE WAS GENERATED BY wbgen2 FROM SOURCE FILE timestamp_fifo_wb.wb
-- DO NOT HAND-EDIT UNLESS IT'S ABSOLUTELY NECESSARY!
---------------------------------------------------------------------------------------

library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;
use work.wbgen2_pkg.all;

package tsf_wbgen2_pkg is
  
  
  -- Input registers (user design -> WB slave)
  
  type t_tsf_in_registers is record
    fifo_wr_req_i                            : std_logic;
    fifo_value_i                             : std_logic_vector(127 downto 0);
    lts0_i                                   : std_logic_vector(31 downto 0);
    lts1_i                                   : std_logic_vector(31 downto 0);
    lts2_i                                   : std_logic_vector(31 downto 0);
    lts3_i                                   : std_logic_vector(31 downto 0);
    ltsctl_valid_i                           : std_logic;
    end record;
  
  constant c_tsf_in_registers_init_value: t_tsf_in_registers := (
    fifo_wr_req_i => '0',
    fifo_value_i => (others => '0'),
    lts0_i => (others => '0'),
    lts1_i => (others => '0'),
    lts2_i => (others => '0'),
    lts3_i => (others => '0'),
    ltsctl_valid_i => '0'
    );
    
    -- Output registers (WB slave -> user design)
    
    type t_tsf_out_registers is record
      fifo_wr_full_o                           : std_logic;
      fifo_wr_empty_o                          : std_logic;
      fifo_wr_usedw_o                          : std_logic_vector(9 downto 0);
      ltsctl_valid_o                           : std_logic;
      ltsctl_valid_load_o                      : std_logic;
      end record;
    
    constant c_tsf_out_registers_init_value: t_tsf_out_registers := (
      fifo_wr_full_o => '0',
      fifo_wr_empty_o => '0',
      fifo_wr_usedw_o => (others => '0'),
      ltsctl_valid_o => '0',
      ltsctl_valid_load_o => '0'
      );
    function "or" (left, right: t_tsf_in_registers) return t_tsf_in_registers;
    function f_x_to_zero (x:std_logic) return std_logic;
    function f_x_to_zero (x:std_logic_vector) return std_logic_vector;
end package;

package body tsf_wbgen2_pkg is
function f_x_to_zero (x:std_logic) return std_logic is
begin
if x = '1' then
return '1';
else
return '0';
end if;
end function;
function f_x_to_zero (x:std_logic_vector) return std_logic_vector is
variable tmp: std_logic_vector(x'length-1 downto 0);
begin
for i in 0 to x'length-1 loop
if(x(i) = 'X' or x(i) = 'U') then
tmp(i):= '0';
else
tmp(i):=x(i);
end if; 
end loop; 
return tmp;
end function;
function "or" (left, right: t_tsf_in_registers) return t_tsf_in_registers is
variable tmp: t_tsf_in_registers;
begin
tmp.fifo_wr_req_i := f_x_to_zero(left.fifo_wr_req_i) or f_x_to_zero(right.fifo_wr_req_i);
tmp.fifo_value_i := f_x_to_zero(left.fifo_value_i) or f_x_to_zero(right.fifo_value_i);
tmp.lts0_i := f_x_to_zero(left.lts0_i) or f_x_to_zero(right.lts0_i);
tmp.lts1_i := f_x_to_zero(left.lts1_i) or f_x_to_zero(right.lts1_i);
tmp.lts2_i := f_x_to_zero(left.lts2_i) or f_x_to_zero(right.lts2_i);
tmp.lts3_i := f_x_to_zero(left.lts3_i) or f_x_to_zero(right.lts3_i);
tmp.ltsctl_valid_i := f_x_to_zero(left.ltsctl_valid_i) or f_x_to_zero(right.ltsctl_valid_i);
return tmp;
end function;
end package body;
