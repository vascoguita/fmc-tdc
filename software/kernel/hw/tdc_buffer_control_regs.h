/*
  Register definitions for slave core: TDC DMA Buffer Control Registers

  * File           : tdc_buffer_control_regs.h
  * Author         : auto-generated by wbgen2 from wbgen/tdc_buffer_control_regs.wb
  * Created        : Thu Jul 19 16:52:59 2018
  * Standard       : ANSI C

    THIS FILE WAS GENERATED BY wbgen2 FROM SOURCE FILE wbgen/tdc_buffer_control_regs.wb
    DO NOT HAND-EDIT UNLESS IT'S ABSOLUTELY NECESSARY!

*/

#ifndef __WBGEN2_REGDEFS_TDC_BUFFER_CONTROL_REGS_WB
#define __WBGEN2_REGDEFS_TDC_BUFFER_CONTROL_REGS_WB

#ifdef __KERNEL__
#include <linux/types.h>
#else
#include <inttypes.h>
#endif

#if defined( __GNUC__)
#define PACKED __attribute__ ((packed))
#else
#error "Unsupported compiler?"
#endif

#ifndef __WBGEN2_MACROS_DEFINED__
#define __WBGEN2_MACROS_DEFINED__
#define WBGEN2_GEN_MASK(offset, size) (((1<<(size))-1) << (offset))
#define WBGEN2_GEN_WRITE(value, offset, size) (((value) & ((1<<(size))-1)) << (offset))
#define WBGEN2_GEN_READ(reg, offset, size) (((reg) >> (offset)) & ((1<<(size))-1))
#define WBGEN2_SIGN_EXTEND(value, bits) (((value) & (1<<bits) ? ~((1<<(bits))-1): 0 ) | (value))
#endif


/* definitions for register: Control/Status register */

/* definitions for field: Enable DMA in reg: Control/Status register */
#define TDC_BUF_CSR_ENABLE                    WBGEN2_GEN_MASK(0, 1)

/* definitions for field: IRQ Timeout (ms) in reg: Control/Status register */
#define TDC_BUF_CSR_IRQ_TIMEOUT_MASK          WBGEN2_GEN_MASK(1, 10)
#define TDC_BUF_CSR_IRQ_TIMEOUT_SHIFT         1
#define TDC_BUF_CSR_IRQ_TIMEOUT_W(value)      WBGEN2_GEN_WRITE(value, 1, 10)
#define TDC_BUF_CSR_IRQ_TIMEOUT_R(reg)        WBGEN2_GEN_READ(reg, 1, 10)

/* definitions for field: Burst size (timestamps) in reg: Control/Status register */
#define TDC_BUF_CSR_BURST_SIZE_MASK           WBGEN2_GEN_MASK(11, 10)
#define TDC_BUF_CSR_BURST_SIZE_SHIFT          11
#define TDC_BUF_CSR_BURST_SIZE_W(value)       WBGEN2_GEN_WRITE(value, 11, 10)
#define TDC_BUF_CSR_BURST_SIZE_R(reg)         WBGEN2_GEN_READ(reg, 11, 10)

/* definitions for field: Switch buffers in reg: Control/Status register */
#define TDC_BUF_CSR_SWITCH_BUFFERS            WBGEN2_GEN_MASK(21, 1)

/* definitions for field: DMA complete in reg: Control/Status register */
#define TDC_BUF_CSR_DONE                      WBGEN2_GEN_MASK(22, 1)

/* definitions for field: DMA overflow in reg: Control/Status register */
#define TDC_BUF_CSR_OVERFLOW                  WBGEN2_GEN_MASK(23, 1)

/* definitions for register: Current buffer base address register */

/* definitions for register: Current buffer base count register */

/* definitions for register: Current buffer base size/valid flag register */

/* definitions for field: Size (in transfers) in reg: Current buffer base size/valid flag register */
#define TDC_BUF_CUR_SIZE_SIZE_MASK            WBGEN2_GEN_MASK(0, 30)
#define TDC_BUF_CUR_SIZE_SIZE_SHIFT           0
#define TDC_BUF_CUR_SIZE_SIZE_W(value)        WBGEN2_GEN_WRITE(value, 0, 30)
#define TDC_BUF_CUR_SIZE_SIZE_R(reg)          WBGEN2_GEN_READ(reg, 0, 30)

/* definitions for field: Valid flag in reg: Current buffer base size/valid flag register */
#define TDC_BUF_CUR_SIZE_VALID                WBGEN2_GEN_MASK(30, 1)

/* definitions for register: Next buffer base address register */

/* definitions for register: Next buffer base size/valid flag register */

/* definitions for field: Size (in transfers) in reg: Next buffer base size/valid flag register */
#define TDC_BUF_NEXT_SIZE_SIZE_MASK           WBGEN2_GEN_MASK(0, 30)
#define TDC_BUF_NEXT_SIZE_SIZE_SHIFT          0
#define TDC_BUF_NEXT_SIZE_SIZE_W(value)       WBGEN2_GEN_WRITE(value, 0, 30)
#define TDC_BUF_NEXT_SIZE_SIZE_R(reg)         WBGEN2_GEN_READ(reg, 0, 30)

/* definitions for field: Valid flag in reg: Next buffer base size/valid flag register */
#define TDC_BUF_NEXT_SIZE_VALID               WBGEN2_GEN_MASK(30, 1)
/* [0x0]: REG Control/Status register */
#define TDC_BUF_REG_CSR 0x00000000
/* [0x4]: REG Current buffer base address register */
#define TDC_BUF_REG_CUR_BASE 0x00000004
/* [0x8]: REG Current buffer base count register */
#define TDC_BUF_REG_CUR_COUNT 0x00000008
/* [0xc]: REG Current buffer base size/valid flag register */
#define TDC_BUF_REG_CUR_SIZE 0x0000000c
/* [0x10]: REG Next buffer base address register */
#define TDC_BUF_REG_NEXT_BASE 0x00000010
/* [0x14]: REG Next buffer base size/valid flag register */
#define TDC_BUF_REG_NEXT_SIZE 0x00000014
#endif
